version: '3'
services:

  prometheus:
    image: prom/prometheus:v2.27.0
    # Don't do this in production. There better use docker networks!
    # Its here for simplicity
    network_mode: host
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:7.5.6
    network_mode: host
    volumes:
      # This bind is only there to provision a dashboard and the datasources.
      # All of this can be also done in the UI.
      - ./grafana:/etc/grafana/provisioning/

  glances:
    # Only the dev contains the additional packages for the exporter.
    # After version 3.1.7 there will be also versioned release images with all the dependencies.
    image: nicolargo/glances:alpine-dev
    network_mode: host
    environment:
      # The `--quiet` flag is needed to output the metrics correctly
      # See https://github.com/nicolargo/glances/issues/1750#issuecomment-719921086
      GLANCES_OPT: "--quiet --export prometheus"
    pid: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

  loki:
    image: grafana/loki:2.1.0
    network_mode: host
    # Loki is just waiting here for your logs

  promtail:
    image: grafana/promtail:2.1.0
    network_mode: host
    volumes:
      # Promtail needs the log files which it should watch mounted inside the container.
      # As well as the config, which describes where and how to send the logs to loki.
      - ./../cat.log:/logmount/cat.log:ro
      - /var/log:/var/log
      - ./promtail:/etc/promtail/mount/:ro
    command: -config.file=/etc/promtail/mount/promtail-config.yaml
